# This workflow will build, sign, and package a WinUI 3 MSIX desktop application
# built on .NET.

name: Test Create GitHubActionsWorkflow.pfx

on:
  workflow_dispatch:

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]
        platform: [x64]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: TestStringResource.sln                        # Replace with your solution name, i.e. App1.sln.
      WinUI_Project_Dir: TestStringResourceWinUIApp
      WinUI_Project_Path: TestStringResourceWinUIApp\TestStringResourceWinUIApp.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Decode the base 64 encoded pfx and save the Signing_Certificate
    - name: Decode the pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.BASE64_ENCODED_PFX }}")
        $currentDirectory = Get-Location
        $certificatePath = Join-Path -Path $currentDirectory -ChildPath $env:WinUI_Project_Dir -AdditionalChildPath GitHubActionsWorkflow.pfx
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)
        if (![IO.File]::Exists("$certificatePath")) { return 1 } else { "certificatePath=$certificatePath" | Out-File -FilePath $env:GITHUB_ENV -Append }
      
    # Remove the pfx
    - name: Remove the pfx
      run: Remove-Item -Path $env:certificatePath
